<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Img.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAORQTFRF////
        /9WOTVFS/v77pb+P/62v/9eP/9uRPEFC/9mQqcSS8vLySk5PRkhO/9yRREtQRElKPkdOOT4/RkpLRkxQ
        O0VO/6iqQERG+NCMRUdN5sKF1dbWbntoe4txoKKiRk1QgYOEza98e3JgVFhZg5V3w8TE0tPTlJaWW19g
        bG9wdYNtYmxg7u7uioyN7siIpZFub2lc/uro4eLinraKtre4vqR3rK6uZWhpYF9YiXxkeHt7lIRocXR0
        aXVlkaeBXFxWtJxz/7u8/87Oip58W2Nb2Ld/m4pquaB1/9rZ/7a3/t/e/sXGJu1ePgAAF1hJREFUeF7d
        XQt72jgWBbdrG1AwYLtmSAMEQkjavEoIISEd0mmTTqf///+sZN2rh20BfWCcnv1mZwgGdKyr+5Zcyg+T
        6bh/O7ROTvvd0Rn87Q/C6N53I58Qy7II8SP3pDuBd/4MzPyIcVNAGq37fXj35WPqN4CXBuLe/xnCWjt1
        gVIKfmsKF71kHCflU4Pbh8teLqYt4MLQ85oUnteD1xSNW7jwpWImCXrh8O7x8Onp6eZy4DXFxPonNbj2
        RWIkCHrec8d2KhWbwqm3b+YhcvRf8ixOkCAJL8sVuyxgV+pPSw/ebLzgtTiEeQqWHUfhF8O2n0P+ruW+
        WI06BjPoXZUrwEuBXT9s8vet1gu1ixOwg94gOX8A5wko+vfwkeKjdjY5E6rxgctob24bGFKKIKgt7sDV
        JqPprDubHhdyTifT81vqUbvUvz45n9IhopoJLkwEy+X6JZ9F8kCv795GbhQ1Go0ockl/WiwjcjY7adHI
        IR4tHa8ftW5Hff6yeeMAnSzYc35V1D1pNfDzDPRmFcgzPzvXR8dAwFkj8zqQyUQF5VTcHgni3haEYzfy
        YUwZaB5mqFEFdZjETJDWOfzGLjEZRjCeLJDlaoJl+wZNRiZ8f+fTOHJXzAG1FM+rViGF3UbXhqMX9Hrq
        N5JduwNq6EAjhzD0wrDpySE2n8yKlKN+JSKNXjMcXt3dDeZBqHzFbmNIhaDnDR6fLsrl9sXh5byJExO2
        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
</value>
  </data>
</root>